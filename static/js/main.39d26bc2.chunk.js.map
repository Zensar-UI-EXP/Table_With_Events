{"version":3,"sources":["Options.tsx","Table.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Options","props","react_default","a","createElement","className","type","placeholder","onChange","search","pageination","value","selectValue","Table","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchList","pageNum","pageLimit","asc","compareBy","key","b","sortBy","arrayCopy","toConsumableArray","state","body","sort","setState","findArrayElementByTitle","event","target","isNaN","filterSearch","setPageLimit","removeClassFn","addClassFn","AphaNum","table","filter","v","toLowerCase","includes","trim","Math","ceil","length","Number","slice","PageLim","limit","document","querySelector","els","querySelectorAll","i","j","children","classList","remove","indexNum","add","changePageination","textContent","checkFn","showCheck","_this2","onClick","src_Options","bind","Array","map","item","head","index","keys","itemData","React","Component","App","_React$Component","hello","inherits","createClass","src_Table","tableData","defaultProps","country","data","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.39d26bc2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface optionProps {\r\n  search: any;\r\n  pageination: any;\r\n  selectValue: any;\r\n}\r\n\r\nfunction Options(props: optionProps) {\r\n  return (\r\n    <div className=\"options\">\r\n      <input\r\n        className=\"searchField\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        onChange={props.search}\r\n      />\r\n      <label>\r\n        Record Per Page:\r\n        <select onChange={props.pageination} value={props.selectValue}>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"4\">4</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Options from \"./Options\";\r\n\r\ninterface tableProps {\r\n  table: {\r\n    head: [];\r\n    body: [];\r\n  };\r\n}\r\ninterface tableState {\r\n  body: [];\r\n  showCheck: Boolean;\r\n}\r\n\r\nclass Table extends React.Component<tableProps, tableState> {\r\n  searchList: any;\r\n  pageNum: Number;\r\n  pageLimit: Number;\r\n  asc: Boolean;\r\n  constructor(props: tableProps) {\r\n    super(props);\r\n    this.state = {\r\n      body: this.props.table.body,\r\n      showCheck: false\r\n    };\r\n    this.pageNum = 0;\r\n    this.searchList = [];\r\n    this.pageLimit = 2;\r\n    this.asc = true;\r\n  }\r\n  componentWillMount() {\r\n    this.setPageLimit(this.pageLimit);\r\n  }\r\n  private compareBy = (key: any) => {\r\n    return (a: any, b: any) => {\r\n      if (this.asc) {\r\n        if (a[key] < b[key]) return -1;\r\n      } else {\r\n        if (a[key] > b[key]) return -1;\r\n      }\r\n      return 0;\r\n    };\r\n  };\r\n  private sortBy = (key: any) => {\r\n    let arrayCopy = [...this.state.body];\r\n    arrayCopy.sort(this.compareBy(key));\r\n    this.asc = !this.asc;\r\n    this.setState({ body: arrayCopy } as Pick<tableState, any>);\r\n  };\r\n  private findArrayElementByTitle = (event: any) => {\r\n    if (event.target.value != \"\") {\r\n      isNaN(event.target.value)\r\n        ? this.filterSearch(\"name\", event.target.value)\r\n        : this.filterSearch(\"id\", event.target.value);\r\n    } else {\r\n      this.setPageLimit(this.pageLimit);\r\n      this.removeClassFn();\r\n      this.addClassFn(1);\r\n    }\r\n  };\r\n  private filterSearch = (AphaNum: any, value: any) => {\r\n    this.searchList = this.props.table.body.filter((v: any) =>\r\n      v[AphaNum].toLowerCase().includes(value.trim().toLowerCase())\r\n    );\r\n    this.pageNum = Math.ceil(this.searchList.length / Number(this.pageLimit));\r\n    this.setState({\r\n      body: this.searchList.slice(0, this.pageLimit)\r\n    } as Pick<tableState, any>);\r\n  };\r\n\r\n  private PageLim = (limit: any) => {\r\n    this.pageLimit = limit.target.value;\r\n    this.setPageLimit(limit.target.value);\r\n  };\r\n  private setPageLimit = (limit: any) => {\r\n    this.removeClassFn();\r\n    this.addClassFn(1);\r\n    if (\r\n      document.querySelector(\".searchField\") != null &&\r\n      (document.querySelector(\".searchField\") as HTMLInputElement).value\r\n    ) {\r\n      this.pageNum = Math.ceil(this.searchList.length / limit);\r\n      this.setState({\r\n        body: this.searchList.slice(0, limit)\r\n      });\r\n    } else {\r\n      this.pageNum = Math.ceil(this.props.table.body.length / limit);\r\n      this.setState({\r\n        body: this.props.table.body.slice(0, limit)\r\n      } as Pick<tableState, any>);\r\n    }\r\n  };\r\n  private removeClassFn = () => {\r\n    let els = document.querySelectorAll(\".pagination\");\r\n    for (var i = 0; i < els.length; i++) {\r\n      for (var j = 0; j < els[i].children.length; j++) {\r\n        els[i].children[j].classList.remove(\"active\");\r\n      }\r\n    }\r\n  };\r\n  private addClassFn = (indexNum: Number) => {\r\n    debugger;\r\n    let els: any = document.querySelectorAll(\".pagination\");\r\n    for (var i: any = 0; i < els.length; i++) {\r\n      for (var j = 0; j < els[i].children.length; j++) {\r\n        els[i].children[Number(indexNum) - 1].classList.add(\"active\");\r\n      }\r\n    }\r\n  };\r\n  private changePageination = (pageNum: any, pageLimit: any, event: any) => {\r\n    this.removeClassFn();\r\n    this.addClassFn(event.target.textContent);\r\n    document.querySelector(\".searchField\") != null &&\r\n    (document.querySelector(\".searchField\") as HTMLInputElement).value != \"\"\r\n      ? this.setState({ body: this.searchList.slice(pageNum, pageLimit) })\r\n      : this.setState({\r\n          body: this.props.table.body.slice(pageNum, pageLimit)\r\n        } as Pick<tableState, any>);\r\n  };\r\n  private checkFn = () => {\r\n    this.setState({ showCheck: !this.state.showCheck });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <div className=\"table__head\">\r\n          <label>\r\n            {\" \"}\r\n            Show Options\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"showOptions\"\r\n              onClick={this.checkFn}\r\n            />{\" \"}\r\n          </label>\r\n          {this.state.showCheck ? (\r\n            <Options\r\n              selectValue={this.pageLimit}\r\n              search={this.findArrayElementByTitle.bind(this)}\r\n              pageination={this.PageLim.bind(this)}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"pagination\">\r\n            {[...Array(this.pageNum)].map((item, i: any) => (\r\n              <button\r\n                className={i == 0 ? \"active\" : \"\"}\r\n                onClick={this.changePageination.bind(\r\n                  this,\r\n                  i * Number(this.pageLimit),\r\n                  i * Number(this.pageLimit) + Number(this.pageLimit)\r\n                )}\r\n                key={i}\r\n              >\r\n                {i + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {this.props.table.head.map(item => (\r\n                  <th onClick={() => this.sortBy(item)} key={item}>\r\n                    {item}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.body.map((item, index) => (\r\n                <tr key={item[index]}>\r\n                  {Object.keys(item).map((itemData, i) => (\r\n                    <td key={itemData}>{item[itemData]} </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"pagination\">\r\n            {[...Array(this.pageNum)].map((item, i: any) => (\r\n              <button\r\n                className={i == 0 ? \"active\" : \"\"}\r\n                onClick={this.changePageination.bind(\r\n                  this,\r\n                  i * Number(this.pageLimit),\r\n                  i * Number(this.pageLimit) + Number(this.pageLimit)\r\n                )}\r\n                key={i}\r\n              >\r\n                {i + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Table from \"./Table\";\nimport data from \"./data.json\";\n\nexport interface myProps {\n  tableData: {\n    table: {\n      head: [];\n      body: [];\n    };\n  };\n}\nexport interface State {\n  hello: String;\n}\nexport class App extends React.Component<myProps, State> {\n  static defaultProps = {\n    country: \"Hello everyone!\",\n    tableData: data\n  };\n  constructor(props: myProps) {\n    super(props);\n    this.state = { hello: \"Mohamed Asheik P\" };\n  }\n  render() {\n    return (\n      <div>\n        <Table {...this.props.tableData} />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}